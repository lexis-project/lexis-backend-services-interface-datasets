// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"code.it4i.cz/lexis/wp8/dataset-management-interface.git/models"
)

// AddProjectAdminCreatedCode is the HTTP code returned for type AddProjectAdminCreated
const AddProjectAdminCreatedCode int = 201

/*AddProjectAdminCreated Admin was added to Project

swagger:response addProjectAdminCreated
*/
type AddProjectAdminCreated struct {
}

// NewAddProjectAdminCreated creates AddProjectAdminCreated with default headers values
func NewAddProjectAdminCreated() *AddProjectAdminCreated {

	return &AddProjectAdminCreated{}
}

// WriteResponse to the client
func (o *AddProjectAdminCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// AddProjectAdminBadRequestCode is the HTTP code returned for type AddProjectAdminBadRequest
const AddProjectAdminBadRequestCode int = 400

/*AddProjectAdminBadRequest Malformed request

swagger:response addProjectAdminBadRequest
*/
type AddProjectAdminBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddProjectAdminBadRequest creates AddProjectAdminBadRequest with default headers values
func NewAddProjectAdminBadRequest() *AddProjectAdminBadRequest {

	return &AddProjectAdminBadRequest{}
}

// WithPayload adds the payload to the add project admin bad request response
func (o *AddProjectAdminBadRequest) WithPayload(payload *models.ErrorResponse) *AddProjectAdminBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add project admin bad request response
func (o *AddProjectAdminBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddProjectAdminBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddProjectAdminUnauthorizedCode is the HTTP code returned for type AddProjectAdminUnauthorized
const AddProjectAdminUnauthorizedCode int = 401

/*AddProjectAdminUnauthorized Unauthorized

swagger:response addProjectAdminUnauthorized
*/
type AddProjectAdminUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddProjectAdminUnauthorized creates AddProjectAdminUnauthorized with default headers values
func NewAddProjectAdminUnauthorized() *AddProjectAdminUnauthorized {

	return &AddProjectAdminUnauthorized{}
}

// WithPayload adds the payload to the add project admin unauthorized response
func (o *AddProjectAdminUnauthorized) WithPayload(payload *models.ErrorResponse) *AddProjectAdminUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add project admin unauthorized response
func (o *AddProjectAdminUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddProjectAdminUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddProjectAdminConflictCode is the HTTP code returned for type AddProjectAdminConflict
const AddProjectAdminConflictCode int = 409

/*AddProjectAdminConflict Conflict, action could not be performed

swagger:response addProjectAdminConflict
*/
type AddProjectAdminConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddProjectAdminConflict creates AddProjectAdminConflict with default headers values
func NewAddProjectAdminConflict() *AddProjectAdminConflict {

	return &AddProjectAdminConflict{}
}

// WithPayload adds the payload to the add project admin conflict response
func (o *AddProjectAdminConflict) WithPayload(payload *models.ErrorResponse) *AddProjectAdminConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add project admin conflict response
func (o *AddProjectAdminConflict) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddProjectAdminConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddProjectAdminInternalServerErrorCode is the HTTP code returned for type AddProjectAdminInternalServerError
const AddProjectAdminInternalServerErrorCode int = 500

/*AddProjectAdminInternalServerError Internal error processing request

swagger:response addProjectAdminInternalServerError
*/
type AddProjectAdminInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddProjectAdminInternalServerError creates AddProjectAdminInternalServerError with default headers values
func NewAddProjectAdminInternalServerError() *AddProjectAdminInternalServerError {

	return &AddProjectAdminInternalServerError{}
}

// WithPayload adds the payload to the add project admin internal server error response
func (o *AddProjectAdminInternalServerError) WithPayload(payload *models.ErrorResponse) *AddProjectAdminInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add project admin internal server error response
func (o *AddProjectAdminInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddProjectAdminInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddProjectAdminBadGatewayCode is the HTTP code returned for type AddProjectAdminBadGateway
const AddProjectAdminBadGatewayCode int = 502

/*AddProjectAdminBadGateway Bad Gateway

swagger:response addProjectAdminBadGateway
*/
type AddProjectAdminBadGateway struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddProjectAdminBadGateway creates AddProjectAdminBadGateway with default headers values
func NewAddProjectAdminBadGateway() *AddProjectAdminBadGateway {

	return &AddProjectAdminBadGateway{}
}

// WithPayload adds the payload to the add project admin bad gateway response
func (o *AddProjectAdminBadGateway) WithPayload(payload *models.ErrorResponse) *AddProjectAdminBadGateway {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add project admin bad gateway response
func (o *AddProjectAdminBadGateway) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddProjectAdminBadGateway) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(502)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
