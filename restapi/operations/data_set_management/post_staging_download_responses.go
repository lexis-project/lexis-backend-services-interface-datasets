// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"code.it4i.cz/lexis/wp8/dataset-management-interface.git/models"
)

// PostStagingDownloadOKCode is the HTTP code returned for type PostStagingDownloadOK
const PostStagingDownloadOKCode int = 200

/*PostStagingDownloadOK Successful request

swagger:response postStagingDownloadOK
*/
type PostStagingDownloadOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewPostStagingDownloadOK creates PostStagingDownloadOK with default headers values
func NewPostStagingDownloadOK() *PostStagingDownloadOK {

	return &PostStagingDownloadOK{}
}

// WithPayload adds the payload to the post staging download o k response
func (o *PostStagingDownloadOK) WithPayload(payload io.ReadCloser) *PostStagingDownloadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post staging download o k response
func (o *PostStagingDownloadOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStagingDownloadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostStagingDownloadBadRequestCode is the HTTP code returned for type PostStagingDownloadBadRequest
const PostStagingDownloadBadRequestCode int = 400

/*PostStagingDownloadBadRequest Malformed Request

swagger:response postStagingDownloadBadRequest
*/
type PostStagingDownloadBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostStagingDownloadBadRequest creates PostStagingDownloadBadRequest with default headers values
func NewPostStagingDownloadBadRequest() *PostStagingDownloadBadRequest {

	return &PostStagingDownloadBadRequest{}
}

// WithPayload adds the payload to the post staging download bad request response
func (o *PostStagingDownloadBadRequest) WithPayload(payload *models.ErrorResponse) *PostStagingDownloadBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post staging download bad request response
func (o *PostStagingDownloadBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStagingDownloadBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostStagingDownloadUnauthorizedCode is the HTTP code returned for type PostStagingDownloadUnauthorized
const PostStagingDownloadUnauthorizedCode int = 401

/*PostStagingDownloadUnauthorized Unauthorized

swagger:response postStagingDownloadUnauthorized
*/
type PostStagingDownloadUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostStagingDownloadUnauthorized creates PostStagingDownloadUnauthorized with default headers values
func NewPostStagingDownloadUnauthorized() *PostStagingDownloadUnauthorized {

	return &PostStagingDownloadUnauthorized{}
}

// WithPayload adds the payload to the post staging download unauthorized response
func (o *PostStagingDownloadUnauthorized) WithPayload(payload *models.ErrorResponse) *PostStagingDownloadUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post staging download unauthorized response
func (o *PostStagingDownloadUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStagingDownloadUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostStagingDownloadForbiddenCode is the HTTP code returned for type PostStagingDownloadForbidden
const PostStagingDownloadForbiddenCode int = 403

/*PostStagingDownloadForbidden Forbidden

swagger:response postStagingDownloadForbidden
*/
type PostStagingDownloadForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostStagingDownloadForbidden creates PostStagingDownloadForbidden with default headers values
func NewPostStagingDownloadForbidden() *PostStagingDownloadForbidden {

	return &PostStagingDownloadForbidden{}
}

// WithPayload adds the payload to the post staging download forbidden response
func (o *PostStagingDownloadForbidden) WithPayload(payload *models.ErrorResponse) *PostStagingDownloadForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post staging download forbidden response
func (o *PostStagingDownloadForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStagingDownloadForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostStagingDownloadBadGatewayCode is the HTTP code returned for type PostStagingDownloadBadGateway
const PostStagingDownloadBadGatewayCode int = 502

/*PostStagingDownloadBadGateway Bad Gateway

swagger:response postStagingDownloadBadGateway
*/
type PostStagingDownloadBadGateway struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostStagingDownloadBadGateway creates PostStagingDownloadBadGateway with default headers values
func NewPostStagingDownloadBadGateway() *PostStagingDownloadBadGateway {

	return &PostStagingDownloadBadGateway{}
}

// WithPayload adds the payload to the post staging download bad gateway response
func (o *PostStagingDownloadBadGateway) WithPayload(payload *models.ErrorResponse) *PostStagingDownloadBadGateway {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post staging download bad gateway response
func (o *PostStagingDownloadBadGateway) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStagingDownloadBadGateway) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(502)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostStagingDownloadServiceUnavailableCode is the HTTP code returned for type PostStagingDownloadServiceUnavailable
const PostStagingDownloadServiceUnavailableCode int = 503

/*PostStagingDownloadServiceUnavailable Server error

swagger:response postStagingDownloadServiceUnavailable
*/
type PostStagingDownloadServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostStagingDownloadServiceUnavailable creates PostStagingDownloadServiceUnavailable with default headers values
func NewPostStagingDownloadServiceUnavailable() *PostStagingDownloadServiceUnavailable {

	return &PostStagingDownloadServiceUnavailable{}
}

// WithPayload adds the payload to the post staging download service unavailable response
func (o *PostStagingDownloadServiceUnavailable) WithPayload(payload *models.ErrorResponse) *PostStagingDownloadServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post staging download service unavailable response
func (o *PostStagingDownloadServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStagingDownloadServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
