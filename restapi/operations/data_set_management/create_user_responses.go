// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"code.it4i.cz/lexis/wp8/dataset-management-interface.git/models"
)

// CreateUserCreatedCode is the HTTP code returned for type CreateUserCreated
const CreateUserCreatedCode int = 201

/*CreateUserCreated User was created

swagger:response createUserCreated
*/
type CreateUserCreated struct {
}

// NewCreateUserCreated creates CreateUserCreated with default headers values
func NewCreateUserCreated() *CreateUserCreated {

	return &CreateUserCreated{}
}

// WriteResponse to the client
func (o *CreateUserCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// CreateUserBadRequestCode is the HTTP code returned for type CreateUserBadRequest
const CreateUserBadRequestCode int = 400

/*CreateUserBadRequest Malformed request

swagger:response createUserBadRequest
*/
type CreateUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateUserBadRequest creates CreateUserBadRequest with default headers values
func NewCreateUserBadRequest() *CreateUserBadRequest {

	return &CreateUserBadRequest{}
}

// WithPayload adds the payload to the create user bad request response
func (o *CreateUserBadRequest) WithPayload(payload *models.ErrorResponse) *CreateUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user bad request response
func (o *CreateUserBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUserUnauthorizedCode is the HTTP code returned for type CreateUserUnauthorized
const CreateUserUnauthorizedCode int = 401

/*CreateUserUnauthorized Unauthorized

swagger:response createUserUnauthorized
*/
type CreateUserUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateUserUnauthorized creates CreateUserUnauthorized with default headers values
func NewCreateUserUnauthorized() *CreateUserUnauthorized {

	return &CreateUserUnauthorized{}
}

// WithPayload adds the payload to the create user unauthorized response
func (o *CreateUserUnauthorized) WithPayload(payload *models.ErrorResponse) *CreateUserUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user unauthorized response
func (o *CreateUserUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUserForbiddenCode is the HTTP code returned for type CreateUserForbidden
const CreateUserForbiddenCode int = 403

/*CreateUserForbidden Permission denied

swagger:response createUserForbidden
*/
type CreateUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateUserForbidden creates CreateUserForbidden with default headers values
func NewCreateUserForbidden() *CreateUserForbidden {

	return &CreateUserForbidden{}
}

// WithPayload adds the payload to the create user forbidden response
func (o *CreateUserForbidden) WithPayload(payload *models.ErrorResponse) *CreateUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user forbidden response
func (o *CreateUserForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUserConflictCode is the HTTP code returned for type CreateUserConflict
const CreateUserConflictCode int = 409

/*CreateUserConflict User already exists

swagger:response createUserConflict
*/
type CreateUserConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateUserConflict creates CreateUserConflict with default headers values
func NewCreateUserConflict() *CreateUserConflict {

	return &CreateUserConflict{}
}

// WithPayload adds the payload to the create user conflict response
func (o *CreateUserConflict) WithPayload(payload *models.ErrorResponse) *CreateUserConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user conflict response
func (o *CreateUserConflict) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUserInternalServerErrorCode is the HTTP code returned for type CreateUserInternalServerError
const CreateUserInternalServerErrorCode int = 500

/*CreateUserInternalServerError Internal error processing request

swagger:response createUserInternalServerError
*/
type CreateUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateUserInternalServerError creates CreateUserInternalServerError with default headers values
func NewCreateUserInternalServerError() *CreateUserInternalServerError {

	return &CreateUserInternalServerError{}
}

// WithPayload adds the payload to the create user internal server error response
func (o *CreateUserInternalServerError) WithPayload(payload *models.ErrorResponse) *CreateUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user internal server error response
func (o *CreateUserInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUserBadGatewayCode is the HTTP code returned for type CreateUserBadGateway
const CreateUserBadGatewayCode int = 502

/*CreateUserBadGateway Bad Gateway

swagger:response createUserBadGateway
*/
type CreateUserBadGateway struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateUserBadGateway creates CreateUserBadGateway with default headers values
func NewCreateUserBadGateway() *CreateUserBadGateway {

	return &CreateUserBadGateway{}
}

// WithPayload adds the payload to the create user bad gateway response
func (o *CreateUserBadGateway) WithPayload(payload *models.ErrorResponse) *CreateUserBadGateway {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user bad gateway response
func (o *CreateUserBadGateway) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserBadGateway) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(502)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUserServiceUnavailableCode is the HTTP code returned for type CreateUserServiceUnavailable
const CreateUserServiceUnavailableCode int = 503

/*CreateUserServiceUnavailable Service Unavailable

swagger:response createUserServiceUnavailable
*/
type CreateUserServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCreateUserServiceUnavailable creates CreateUserServiceUnavailable with default headers values
func NewCreateUserServiceUnavailable() *CreateUserServiceUnavailable {

	return &CreateUserServiceUnavailable{}
}

// WithPayload adds the payload to the create user service unavailable response
func (o *CreateUserServiceUnavailable) WithPayload(payload *models.ErrorResponse) *CreateUserServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user service unavailable response
func (o *CreateUserServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
