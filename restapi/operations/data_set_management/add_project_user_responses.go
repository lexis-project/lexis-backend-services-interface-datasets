// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"code.it4i.cz/lexis/wp8/dataset-management-interface.git/models"
)

// AddProjectUserCreatedCode is the HTTP code returned for type AddProjectUserCreated
const AddProjectUserCreatedCode int = 201

/*AddProjectUserCreated User was added to the project

swagger:response addProjectUserCreated
*/
type AddProjectUserCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddProjectUserCreated creates AddProjectUserCreated with default headers values
func NewAddProjectUserCreated() *AddProjectUserCreated {

	return &AddProjectUserCreated{}
}

// WithPayload adds the payload to the add project user created response
func (o *AddProjectUserCreated) WithPayload(payload *models.ErrorResponse) *AddProjectUserCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add project user created response
func (o *AddProjectUserCreated) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddProjectUserCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddProjectUserBadRequestCode is the HTTP code returned for type AddProjectUserBadRequest
const AddProjectUserBadRequestCode int = 400

/*AddProjectUserBadRequest Malformed request

swagger:response addProjectUserBadRequest
*/
type AddProjectUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddProjectUserBadRequest creates AddProjectUserBadRequest with default headers values
func NewAddProjectUserBadRequest() *AddProjectUserBadRequest {

	return &AddProjectUserBadRequest{}
}

// WithPayload adds the payload to the add project user bad request response
func (o *AddProjectUserBadRequest) WithPayload(payload *models.ErrorResponse) *AddProjectUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add project user bad request response
func (o *AddProjectUserBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddProjectUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddProjectUserUnauthorizedCode is the HTTP code returned for type AddProjectUserUnauthorized
const AddProjectUserUnauthorizedCode int = 401

/*AddProjectUserUnauthorized Unauthorized

swagger:response addProjectUserUnauthorized
*/
type AddProjectUserUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddProjectUserUnauthorized creates AddProjectUserUnauthorized with default headers values
func NewAddProjectUserUnauthorized() *AddProjectUserUnauthorized {

	return &AddProjectUserUnauthorized{}
}

// WithPayload adds the payload to the add project user unauthorized response
func (o *AddProjectUserUnauthorized) WithPayload(payload *models.ErrorResponse) *AddProjectUserUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add project user unauthorized response
func (o *AddProjectUserUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddProjectUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddProjectUserConflictCode is the HTTP code returned for type AddProjectUserConflict
const AddProjectUserConflictCode int = 409

/*AddProjectUserConflict Conflict, action could not be performed

swagger:response addProjectUserConflict
*/
type AddProjectUserConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddProjectUserConflict creates AddProjectUserConflict with default headers values
func NewAddProjectUserConflict() *AddProjectUserConflict {

	return &AddProjectUserConflict{}
}

// WithPayload adds the payload to the add project user conflict response
func (o *AddProjectUserConflict) WithPayload(payload *models.ErrorResponse) *AddProjectUserConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add project user conflict response
func (o *AddProjectUserConflict) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddProjectUserConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddProjectUserInternalServerErrorCode is the HTTP code returned for type AddProjectUserInternalServerError
const AddProjectUserInternalServerErrorCode int = 500

/*AddProjectUserInternalServerError Internal error processing request

swagger:response addProjectUserInternalServerError
*/
type AddProjectUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddProjectUserInternalServerError creates AddProjectUserInternalServerError with default headers values
func NewAddProjectUserInternalServerError() *AddProjectUserInternalServerError {

	return &AddProjectUserInternalServerError{}
}

// WithPayload adds the payload to the add project user internal server error response
func (o *AddProjectUserInternalServerError) WithPayload(payload *models.ErrorResponse) *AddProjectUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add project user internal server error response
func (o *AddProjectUserInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddProjectUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddProjectUserBadGatewayCode is the HTTP code returned for type AddProjectUserBadGateway
const AddProjectUserBadGatewayCode int = 502

/*AddProjectUserBadGateway Bad Gateway

swagger:response addProjectUserBadGateway
*/
type AddProjectUserBadGateway struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddProjectUserBadGateway creates AddProjectUserBadGateway with default headers values
func NewAddProjectUserBadGateway() *AddProjectUserBadGateway {

	return &AddProjectUserBadGateway{}
}

// WithPayload adds the payload to the add project user bad gateway response
func (o *AddProjectUserBadGateway) WithPayload(payload *models.ErrorResponse) *AddProjectUserBadGateway {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add project user bad gateway response
func (o *AddProjectUserBadGateway) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddProjectUserBadGateway) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(502)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
