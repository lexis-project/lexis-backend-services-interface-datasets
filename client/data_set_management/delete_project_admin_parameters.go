// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"code.it4i.cz/lexis/wp8/dataset-management-interface.git/models"
)

// NewDeleteProjectAdminParams creates a new DeleteProjectAdminParams object
// with the default values initialized.
func NewDeleteProjectAdminParams() *DeleteProjectAdminParams {
	var ()
	return &DeleteProjectAdminParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteProjectAdminParamsWithTimeout creates a new DeleteProjectAdminParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteProjectAdminParamsWithTimeout(timeout time.Duration) *DeleteProjectAdminParams {
	var ()
	return &DeleteProjectAdminParams{

		timeout: timeout,
	}
}

// NewDeleteProjectAdminParamsWithContext creates a new DeleteProjectAdminParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteProjectAdminParamsWithContext(ctx context.Context) *DeleteProjectAdminParams {
	var ()
	return &DeleteProjectAdminParams{

		Context: ctx,
	}
}

// NewDeleteProjectAdminParamsWithHTTPClient creates a new DeleteProjectAdminParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteProjectAdminParamsWithHTTPClient(client *http.Client) *DeleteProjectAdminParams {
	var ()
	return &DeleteProjectAdminParams{
		HTTPClient: client,
	}
}

/*DeleteProjectAdminParams contains all the parameters to send to the API endpoint
for the delete project admin operation typically these are written to a http.Request
*/
type DeleteProjectAdminParams struct {

	/*ProjectAndUserInfo*/
	ProjectAndUserInfo *models.UserInProject

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete project admin params
func (o *DeleteProjectAdminParams) WithTimeout(timeout time.Duration) *DeleteProjectAdminParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete project admin params
func (o *DeleteProjectAdminParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete project admin params
func (o *DeleteProjectAdminParams) WithContext(ctx context.Context) *DeleteProjectAdminParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete project admin params
func (o *DeleteProjectAdminParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete project admin params
func (o *DeleteProjectAdminParams) WithHTTPClient(client *http.Client) *DeleteProjectAdminParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete project admin params
func (o *DeleteProjectAdminParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProjectAndUserInfo adds the projectAndUserInfo to the delete project admin params
func (o *DeleteProjectAdminParams) WithProjectAndUserInfo(projectAndUserInfo *models.UserInProject) *DeleteProjectAdminParams {
	o.SetProjectAndUserInfo(projectAndUserInfo)
	return o
}

// SetProjectAndUserInfo adds the projectAndUserInfo to the delete project admin params
func (o *DeleteProjectAdminParams) SetProjectAndUserInfo(projectAndUserInfo *models.UserInProject) {
	o.ProjectAndUserInfo = projectAndUserInfo
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteProjectAdminParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ProjectAndUserInfo != nil {
		if err := r.SetBodyParam(o.ProjectAndUserInfo); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
