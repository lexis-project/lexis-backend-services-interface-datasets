// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"code.it4i.cz/lexis/wp8/dataset-management-interface.git/models"
)

// CreateProjectReader is a Reader for the CreateProject structure.
type CreateProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateProjectCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateProjectConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewCreateProjectBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateProjectCreated creates a CreateProjectCreated with default headers values
func NewCreateProjectCreated() *CreateProjectCreated {
	return &CreateProjectCreated{}
}

/*CreateProjectCreated handles this case with default header values.

Project was created
*/
type CreateProjectCreated struct {
}

func (o *CreateProjectCreated) Error() string {
	return fmt.Sprintf("[POST /project][%d] createProjectCreated ", 201)
}

func (o *CreateProjectCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectBadRequest creates a CreateProjectBadRequest with default headers values
func NewCreateProjectBadRequest() *CreateProjectBadRequest {
	return &CreateProjectBadRequest{}
}

/*CreateProjectBadRequest handles this case with default header values.

Malformed request
*/
type CreateProjectBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CreateProjectBadRequest) Error() string {
	return fmt.Sprintf("[POST /project][%d] createProjectBadRequest  %+v", 400, o.Payload)
}

func (o *CreateProjectBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectUnauthorized creates a CreateProjectUnauthorized with default headers values
func NewCreateProjectUnauthorized() *CreateProjectUnauthorized {
	return &CreateProjectUnauthorized{}
}

/*CreateProjectUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateProjectUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CreateProjectUnauthorized) Error() string {
	return fmt.Sprintf("[POST /project][%d] createProjectUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateProjectUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectForbidden creates a CreateProjectForbidden with default headers values
func NewCreateProjectForbidden() *CreateProjectForbidden {
	return &CreateProjectForbidden{}
}

/*CreateProjectForbidden handles this case with default header values.

Permission denied
*/
type CreateProjectForbidden struct {
	Payload *models.ErrorResponse
}

func (o *CreateProjectForbidden) Error() string {
	return fmt.Sprintf("[POST /project][%d] createProjectForbidden  %+v", 403, o.Payload)
}

func (o *CreateProjectForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectConflict creates a CreateProjectConflict with default headers values
func NewCreateProjectConflict() *CreateProjectConflict {
	return &CreateProjectConflict{}
}

/*CreateProjectConflict handles this case with default header values.

Conflict: the project already exists
*/
type CreateProjectConflict struct {
	Payload *models.ErrorResponse
}

func (o *CreateProjectConflict) Error() string {
	return fmt.Sprintf("[POST /project][%d] createProjectConflict  %+v", 409, o.Payload)
}

func (o *CreateProjectConflict) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateProjectConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectInternalServerError creates a CreateProjectInternalServerError with default headers values
func NewCreateProjectInternalServerError() *CreateProjectInternalServerError {
	return &CreateProjectInternalServerError{}
}

/*CreateProjectInternalServerError handles this case with default header values.

Internal error processing request
*/
type CreateProjectInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CreateProjectInternalServerError) Error() string {
	return fmt.Sprintf("[POST /project][%d] createProjectInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateProjectInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectBadGateway creates a CreateProjectBadGateway with default headers values
func NewCreateProjectBadGateway() *CreateProjectBadGateway {
	return &CreateProjectBadGateway{}
}

/*CreateProjectBadGateway handles this case with default header values.

Bad Gateway
*/
type CreateProjectBadGateway struct {
	Payload *models.ErrorResponse
}

func (o *CreateProjectBadGateway) Error() string {
	return fmt.Sprintf("[POST /project][%d] createProjectBadGateway  %+v", 502, o.Payload)
}

func (o *CreateProjectBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateProjectBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateProjectBody create project body
swagger:model CreateProjectBody
*/
type CreateProjectBody struct {

	// Project name (Keycloak group)
	// Required: true
	Projectname *string `json:"projectname"`
}

// Validate validates this create project body
func (o *CreateProjectBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateProjectname(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateProjectBody) validateProjectname(formats strfmt.Registry) error {

	if err := validate.Required("ProjectInfo"+"."+"projectname", "body", o.Projectname); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateProjectBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateProjectBody) UnmarshalBinary(b []byte) error {
	var res CreateProjectBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
