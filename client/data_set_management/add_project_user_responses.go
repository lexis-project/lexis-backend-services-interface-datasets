// Code generated by go-swagger; DO NOT EDIT.

package data_set_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"code.it4i.cz/lexis/wp8/dataset-management-interface.git/models"
)

// AddProjectUserReader is a Reader for the AddProjectUser structure.
type AddProjectUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddProjectUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddProjectUserCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddProjectUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddProjectUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddProjectUserConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddProjectUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewAddProjectUserBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddProjectUserCreated creates a AddProjectUserCreated with default headers values
func NewAddProjectUserCreated() *AddProjectUserCreated {
	return &AddProjectUserCreated{}
}

/*AddProjectUserCreated handles this case with default header values.

User was added to the project
*/
type AddProjectUserCreated struct {
	Payload *models.ErrorResponse
}

func (o *AddProjectUserCreated) Error() string {
	return fmt.Sprintf("[POST /project/user][%d] addProjectUserCreated  %+v", 201, o.Payload)
}

func (o *AddProjectUserCreated) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AddProjectUserCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectUserBadRequest creates a AddProjectUserBadRequest with default headers values
func NewAddProjectUserBadRequest() *AddProjectUserBadRequest {
	return &AddProjectUserBadRequest{}
}

/*AddProjectUserBadRequest handles this case with default header values.

Malformed request
*/
type AddProjectUserBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *AddProjectUserBadRequest) Error() string {
	return fmt.Sprintf("[POST /project/user][%d] addProjectUserBadRequest  %+v", 400, o.Payload)
}

func (o *AddProjectUserBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AddProjectUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectUserUnauthorized creates a AddProjectUserUnauthorized with default headers values
func NewAddProjectUserUnauthorized() *AddProjectUserUnauthorized {
	return &AddProjectUserUnauthorized{}
}

/*AddProjectUserUnauthorized handles this case with default header values.

Unauthorized
*/
type AddProjectUserUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *AddProjectUserUnauthorized) Error() string {
	return fmt.Sprintf("[POST /project/user][%d] addProjectUserUnauthorized  %+v", 401, o.Payload)
}

func (o *AddProjectUserUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AddProjectUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectUserConflict creates a AddProjectUserConflict with default headers values
func NewAddProjectUserConflict() *AddProjectUserConflict {
	return &AddProjectUserConflict{}
}

/*AddProjectUserConflict handles this case with default header values.

Conflict, action could not be performed
*/
type AddProjectUserConflict struct {
	Payload *models.ErrorResponse
}

func (o *AddProjectUserConflict) Error() string {
	return fmt.Sprintf("[POST /project/user][%d] addProjectUserConflict  %+v", 409, o.Payload)
}

func (o *AddProjectUserConflict) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AddProjectUserConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectUserInternalServerError creates a AddProjectUserInternalServerError with default headers values
func NewAddProjectUserInternalServerError() *AddProjectUserInternalServerError {
	return &AddProjectUserInternalServerError{}
}

/*AddProjectUserInternalServerError handles this case with default header values.

Internal error processing request
*/
type AddProjectUserInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *AddProjectUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /project/user][%d] addProjectUserInternalServerError  %+v", 500, o.Payload)
}

func (o *AddProjectUserInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AddProjectUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectUserBadGateway creates a AddProjectUserBadGateway with default headers values
func NewAddProjectUserBadGateway() *AddProjectUserBadGateway {
	return &AddProjectUserBadGateway{}
}

/*AddProjectUserBadGateway handles this case with default header values.

Bad Gateway
*/
type AddProjectUserBadGateway struct {
	Payload *models.ErrorResponse
}

func (o *AddProjectUserBadGateway) Error() string {
	return fmt.Sprintf("[POST /project/user][%d] addProjectUserBadGateway  %+v", 502, o.Payload)
}

func (o *AddProjectUserBadGateway) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AddProjectUserBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
